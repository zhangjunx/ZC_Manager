<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xr.dao.MaterialStockDataMapper" >
  <resultMap id="BaseResultMap" type="com.xr.entity.MaterialStockData" >
    <id column="DataNo" property="datano" jdbcType="INTEGER" />
    <result column="ItemCode" property="itemcode" jdbcType="NVARCHAR" />
    <result column="Storage" property="storage" jdbcType="DECIMAL" />
    <result column="WareCode" property="warecode" jdbcType="INTEGER" />
    <result column="WareName" property="warename" jdbcType="NVARCHAR" />
    <result column="CreatePerson" property="createperson" jdbcType="NVARCHAR" />
    <result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="UpdatePerson" property="updateperson" jdbcType="NVARCHAR" />
    <result column="UpdateDate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="DelPerson" property="delperson" jdbcType="NVARCHAR" />
    <result column="DelDate" property="deldate" jdbcType="TIMESTAMP" />
    <result column="Deleted" property="deleted" jdbcType="NVARCHAR" />
    <result column="ItemName" property="itemname" jdbcType="NVARCHAR" />
    <result column="Spec" property="spec" jdbcType="NVARCHAR" />
    <result column="Type" property="type" jdbcType="NVARCHAR" />
    <result column="UnitName" property="unitname" jdbcType="NVARCHAR" />
    <result column="ItemType" property="itemtype" jdbcType="NVARCHAR" />
    <result column="Remark" property="remark" jdbcType="NVARCHAR" />
    <result column="Price" property="price" jdbcType="DECIMAL" />
    <result column="SumMoney" property="summoney" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    DataNo, ItemCode, Storage, WareCode, WareName, CreatePerson, CreateDate, UpdatePerson, 
    UpdateDate, DelPerson, DelDate, Deleted, ItemName, Spec, Type, UnitName, ItemType, 
    Remark, Price, SumMoney
  </sql>
  
   <!-- 查库存 -->
  <select id="queryMaterialStockDataList" resultType="Map" parameterType="Map">
      select sd.warecode,w.warename,sd.itemcode,d.itemname,
      sd.price,sd.storage,sd.summoney,
       (select holdername from holderdata where holderno=sd.createperson) createperson,
      convert(varchar(10),sd.createdate,23) createdate,
        (select holdername from holderdata where holderno=sd.updateperson) updateperson,
      convert(varchar(10),sd.updatedate,23) updatedate,
  d.spec,d.type,d.unitname,d.itemtype,d.remark from MaterialStockData sd 
  left join MaterialData d on d.itemcode=sd.itemcode
  left join WareHouseData w on sd.warecode=w.warecode
 <where>
       <if test="warecode!=null and warecode!='' ">
           and sd.warecode=#{warecode,jdbcType=INTEGER}
       </if>
        <if test="warename!=null and warename!='' ">
           and sd.warename like '%'+#{warename}+'%'
       </if>
       <if test="itemcode!=null and itemcode!='' ">
           and sd.itemcode like '%'+#{itemcode}+'%'
       </if>
  </where>
  </select>
  
  <!-- 根据条码，仓库和价格查库存是否存在 -->
  <select id="queryMaterialStockByItemCodeAndWareCodeAndPrice" resultMap="BaseResultMap" parameterType="com.xr.entity.MaterialStockData">
     select * from MaterialStockData 
     where ItemCode=#{itemcode,jdbcType=VARCHAR}
     and WareCode=#{warecode,jdbcType=INTEGER}
     and Price=#{price,jdbcType=DECIMAL}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from MaterialStockData
    where DataNo = #{datano,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from MaterialStockData
    where DataNo = #{datano,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xr.entity.MaterialStockData" >
    insert into MaterialStockData (DataNo, ItemCode, Storage, 
      WareCode, WareName, CreatePerson, 
      CreateDate, UpdatePerson, UpdateDate, 
      DelPerson, DelDate, Deleted, 
      ItemName, Spec, Type, 
      UnitName, ItemType, Remark, 
      Price, SumMoney)
    values (#{datano,jdbcType=INTEGER}, #{itemcode,jdbcType=NVARCHAR}, #{storage,jdbcType=DECIMAL}, 
      #{warecode,jdbcType=INTEGER}, #{warename,jdbcType=NVARCHAR}, #{createperson,jdbcType=NVARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{updateperson,jdbcType=NVARCHAR}, #{updatedate,jdbcType=TIMESTAMP}, 
      #{delperson,jdbcType=NVARCHAR}, #{deldate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=NVARCHAR}, 
      #{itemname,jdbcType=NVARCHAR}, #{spec,jdbcType=NVARCHAR}, #{type,jdbcType=NVARCHAR}, 
      #{unitname,jdbcType=NVARCHAR}, #{itemtype,jdbcType=NVARCHAR}, #{remark,jdbcType=NVARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{summoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.xr.entity.MaterialStockData" >
    insert into MaterialStockData
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="datano != null" >
        DataNo,
      </if>
      <if test="itemcode != null" >
        ItemCode,
      </if>
      <if test="storage != null" >
        Storage,
      </if>
      <if test="warecode != null" >
        WareCode,
      </if>
      <if test="warename != null" >
        WareName,
      </if>
      <if test="createperson != null" >
        CreatePerson,
      </if>
      <if test="createdate != null" >
        CreateDate,
      </if>
      <if test="updateperson != null" >
        UpdatePerson,
      </if>
      <if test="updatedate != null" >
        UpdateDate,
      </if>
      <if test="delperson != null" >
        DelPerson,
      </if>
      <if test="deldate != null" >
        DelDate,
      </if>
      <if test="deleted != null" >
        Deleted,
      </if>
      <if test="itemname != null" >
        ItemName,
      </if>
      <if test="spec != null" >
        Spec,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="unitname != null" >
        UnitName,
      </if>
      <if test="itemtype != null" >
        ItemType,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
      <if test="price != null" >
        Price,
      </if>
      <if test="summoney != null" >
        SumMoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="datano != null" >
        #{datano,jdbcType=INTEGER},
      </if>
      <if test="itemcode != null" >
        #{itemcode,jdbcType=NVARCHAR},
      </if>
      <if test="storage != null" >
        #{storage,jdbcType=DECIMAL},
      </if>
      <if test="warecode != null" >
        #{warecode,jdbcType=INTEGER},
      </if>
      <if test="warename != null" >
        #{warename,jdbcType=NVARCHAR},
      </if>
      <if test="createperson != null" >
        #{createperson,jdbcType=NVARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateperson != null" >
        #{updateperson,jdbcType=NVARCHAR},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="delperson != null" >
        #{delperson,jdbcType=NVARCHAR},
      </if>
      <if test="deldate != null" >
        #{deldate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=NVARCHAR},
      </if>
      <if test="itemname != null" >
        #{itemname,jdbcType=NVARCHAR},
      </if>
      <if test="spec != null" >
        #{spec,jdbcType=NVARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=NVARCHAR},
      </if>
      <if test="unitname != null" >
        #{unitname,jdbcType=NVARCHAR},
      </if>
      <if test="itemtype != null" >
        #{itemtype,jdbcType=NVARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=NVARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="summoney != null" >
        #{summoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xr.entity.MaterialStockData" >
    update MaterialStockData
    <set >
      <if test="itemcode != null" >
        ItemCode = #{itemcode,jdbcType=NVARCHAR},
      </if>
      <if test="storage != null" >
        Storage = #{storage,jdbcType=DECIMAL},
      </if>
      <if test="warecode != null" >
        WareCode = #{warecode,jdbcType=INTEGER},
      </if>
      <if test="warename != null" >
        WareName = #{warename,jdbcType=NVARCHAR},
      </if>
      <if test="createperson != null" >
        CreatePerson = #{createperson,jdbcType=NVARCHAR},
      </if>
      <if test="createdate != null" >
        CreateDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateperson != null" >
        UpdatePerson = #{updateperson,jdbcType=NVARCHAR},
      </if>
      <if test="updatedate != null" >
        UpdateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="delperson != null" >
        DelPerson = #{delperson,jdbcType=NVARCHAR},
      </if>
      <if test="deldate != null" >
        DelDate = #{deldate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        Deleted = #{deleted,jdbcType=NVARCHAR},
      </if>
      <if test="itemname != null" >
        ItemName = #{itemname,jdbcType=NVARCHAR},
      </if>
      <if test="spec != null" >
        Spec = #{spec,jdbcType=NVARCHAR},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=NVARCHAR},
      </if>
      <if test="unitname != null" >
        UnitName = #{unitname,jdbcType=NVARCHAR},
      </if>
      <if test="itemtype != null" >
        ItemType = #{itemtype,jdbcType=NVARCHAR},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=NVARCHAR},
      </if>
      <if test="price != null" >
        Price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="summoney != null" >
        SumMoney = #{summoney,jdbcType=DECIMAL},
      </if>
    </set>
    where DataNo = #{datano,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xr.entity.MaterialStockData" >
    update MaterialStockData
    set ItemCode = #{itemcode,jdbcType=NVARCHAR},
      Storage = #{storage,jdbcType=DECIMAL},
      WareCode = #{warecode,jdbcType=INTEGER},
      WareName = #{warename,jdbcType=NVARCHAR},
      CreatePerson = #{createperson,jdbcType=NVARCHAR},
      CreateDate = #{createdate,jdbcType=TIMESTAMP},
      UpdatePerson = #{updateperson,jdbcType=NVARCHAR},
      UpdateDate = #{updatedate,jdbcType=TIMESTAMP},
      DelPerson = #{delperson,jdbcType=NVARCHAR},
      DelDate = #{deldate,jdbcType=TIMESTAMP},
      Deleted = #{deleted,jdbcType=NVARCHAR},
      ItemName = #{itemname,jdbcType=NVARCHAR},
      Spec = #{spec,jdbcType=NVARCHAR},
      Type = #{type,jdbcType=NVARCHAR},
      UnitName = #{unitname,jdbcType=NVARCHAR},
      ItemType = #{itemtype,jdbcType=NVARCHAR},
      Remark = #{remark,jdbcType=NVARCHAR},
      Price = #{price,jdbcType=DECIMAL},
      SumMoney = #{summoney,jdbcType=DECIMAL}
    where DataNo = #{datano,jdbcType=INTEGER}
  </update>
</mapper>