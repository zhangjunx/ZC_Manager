package com.xr.controller;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.support.MultipartFilter;

import com.xr.service.ZC_FileManagerService;

/**
 * 技术规范文档管理
 * @author Administrator
 *
 */
@RequestMapping("/zcFileManager")
@Controller
public class ZC_FileManagerController {
	
	@Autowired
	private ZC_FileManagerService service;
	
	/**
	 * 上传技术规范文档
	 * @param files
	 * @return
	 */
	@RequestMapping("/uploadFile")
	@ResponseBody
	public Map<String,Object> uploadFile(@RequestParam MultipartFile []files){
		Map<String,Object> resultMap = service.uploadFile(files);
		return resultMap;
	}
	
	/**
	 * 获取文件列表
	 * @param map
	 * @return
	 */
	@RequestMapping("/getFileList")
	@ResponseBody
	public Map<String,Object> getFileList(@RequestParam Map<String,Object> map){
		Map<String,Object> resultMap = service.getFileList(map);
		return resultMap;
	}
	
	/**
	 * 删除文件
	 * @param map
	 * @return
	 */
	@RequestMapping("/delFile")
	@ResponseBody
	public Map<String,Object> delFile(@RequestParam Map<String,Object> map){
		Map<String,Object> resultMap = service.delFile(map);
		return resultMap;
	}
	
	/**
	 * 下载文件
	 * @param map
	 * @return
	 */
	@RequestMapping("/downLoadFile")
	@ResponseBody
	public HttpServletResponse downLoadFile(@RequestParam Map<String,Object> map,HttpServletResponse response){
		try {
            // path是指欲下载的文件的路径。
			String path = map.get("path").toString();
            File file = new File(path);
            // 取得文件名。
            String filename = file.getName();
            // 取得文件的后缀名。
            String ext = filename.substring(filename.lastIndexOf(".") + 1).toUpperCase();

            // 以流的形式下载文件。
            InputStream fis = new BufferedInputStream(new FileInputStream(path));
            byte[] buffer = new byte[fis.available()];
            fis.read(buffer);
            fis.close();
            // 清空response
            response.reset();
            // 设置response的Header
            response.addHeader("Content-Disposition", "attachment;filename=" + new String(filename.getBytes()));
            response.addHeader("Content-Length", "" + file.length());
            OutputStream toClient = new BufferedOutputStream(response.getOutputStream());
            response.setContentType("application/octet-stream");
            toClient.write(buffer);
            toClient.flush();
            toClient.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        return response;
	}
}
